@using tcc_core.Models.ViewModels

@model ChangePasswordViewModel

@{
    ViewData["Title"] = "Alterar Senha";
}

<h1 class="text-center">@ViewData["Title"]</h1>
<hr />

<div class="row justify-content-center">
    <div class="col-md-4">
        <form asp-action="ChangePassword">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-3">
                <label asp-for="SenhaAtual" class="control-label">Senha Atual:</label>
                <input asp-for="SenhaAtual" class="form-control" />
                <span asp-validation-for="SenhaAtual" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="NovaSenha" class="control-label">Nova Senha:</label>
                <input asp-for="NovaSenha" class="form-control" />
                <span asp-validation-for="NovaSenha" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="ConfirmacaoSenha" class="control-label">Confirme a Nova Senha:</label>
                <input asp-for="ConfirmacaoSenha" class="form-control" />
                <span asp-validation-for="ConfirmacaoSenha" class="text-danger"></span>
            </div>

            <br />
            <div class="form-group mb-3 text-center">
                <input type="submit" value="Alterar Senha" class="btn btn-success" /> |
                <a asp-action="Index" class="btn btn-secondary">Voltar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
